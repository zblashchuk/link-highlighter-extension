name: CD — Build & Release

on:
  push:
    tags: ['v*']   # приклад тригера: v1.2.3
    workflow_dispatch: {}

# ⬇️ ДАЄМО ТОКЕНУ ПРАВО ЗАПИСУ ДО КОНТЕНТУ РЕПО
permissions:
  contents: write         # потрібно, щоб створювати Release

jobs:
  test:
    name: Run Playwright tests
    runs-on: ubuntu-latest
    # можеш використовувати контейнер з уже встановленим браузером:
    # container: mcr.microsoft.com/playwright:v1.47.0-jammy

    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'
      - run: npm ci || npm i
      - run: npx playwright install --with-deps chromium
      # якщо у тебе в конфізі headless=true в CI — вистачить простого запуску:
      - name: Run tests
        run: npx playwright test --project=chromium
      # або (якщо тримаєш headless: false) — через Xvfb:
      # - name: Run tests (headed via Xvfb)
      #   run: xvfb-run --auto-servernum --server-args='-screen 0 1920x1080x24' npx playwright test --project=chromium

      - name: Upload HTML report
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: playwright-report
          path: playwright-report/
          retention-days: 7

  build-and-release:
    name: Build ZIP & create GitHub Release
    runs-on: ubuntu-latest
    needs: test             # ← НЕ стартує, поки job "test" не стане зеленою

    steps:
      - uses: actions/checkout@v4

      - name: Install jq
        run: sudo apt-get update && sudo apt-get install -y jq zip

      - name: Read manifest version
        id: ver
        run: echo "ver=$(jq -r '.version' extension/manifest.json)" >> $GITHUB_OUTPUT

      - name: Check tag matches manifest.json
        run: |
          TAG="${GITHUB_REF_NAME#v}"
          MANIFEST_VER=$(jq -r '.version' extension/manifest.json)
          if [ "$TAG" != "$MANIFEST_VER" ]; then
            echo "Tag v$TAG != manifest.json version $MANIFEST_VER"
            exit 1
          fi

      - name: Pack extension
        run: |
          cd extension
          zip -r ../link-highlighter-${{ steps.ver.outputs.ver }}.zip .
          cd ..

      - name: Create GitHub Release
        uses: softprops/action-gh-release@v2
        with:
          tag_name: ${{ github.ref_name }}
          name: Release ${{ github.ref_name }}
          files: link-highlighter-${{ steps.ver.outputs.ver }}.zip
          generate_release_notes: true
